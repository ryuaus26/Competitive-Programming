  #include<iostream>
  #include<algorithm>
  #include<vector>
  #include<set>
  #include<unordered_map>
  #include<bits/stdc++.h>
using namespace std;

#define ar array
#define ll long long
#define ld long double
#define sza(x) ((int)x.size())
#define all(a) (a).begin(), (a).end()

#define PI 3.1415926535897932384626433832795l
const int MAX_N = 1e5 + 5;
const ll MOD = 1e9 + 7;
const ll INF = 1e9;
const ld EPS = 1e-9;

bool isValid[8][8]; // 8 rows and 8 columns :)

void solve(){
	for(int i = 0 ;i< 8;i++){
		string s;
		cin >> s;
		for(int j = 0;j < 8;j++){
			isValid[i][j] = s[j] == '.'; // '.' is a free space therefore, we would set this to true
		}
	}

	vector<int>values(8);
	iota(values.begin(),values.end(),0);
	int ans = 0;
	do{
		bool work = true;
		for(int i = 0;i < 8;i++){
			if(!isValid[i][values[i]]) work = false;
		}

		for(int i = 0; i< 8;i++){
			for(int j = i + 1;j < 8;j++){
				if(values[i] + i == values[j] + j|| values[i] - i == values[j] -j) work = false;
			}
		}
		ans += work; // Work if true then 1 if false then 0. 0 = false 1 = true
	}while(next_permutation(values.begin(),values.end()));
	cout << ans << endl;

}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	solve();
}
