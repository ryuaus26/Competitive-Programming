#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<unordered_map>
#include<bits/stdc++.h>

using namespace std;

#define ar array
#define ll long long
#define ld long double
#define sza(x) ((int)x.size())
#define all(a) (a).begin(), (a).end()

#define PI 3.1415926535897932384626433832795l 
const int MAX_N = 1e5 + 5;
const ll MOD = 1e9 + 7;
const ll INF = 1e9;
const ld EPS = 1e-9;

void solve(){
  freopen("lineup.in","r",stdin);
  freopen("lineup.out","w",stdout);
  int n;
  cin >> n;
  vector<pair<string,string>>restrictions;
  vector<string>cows = {"Bessie","Buttercup","Belinda","Beatrice","Bella","Blue","Betsy","Sue"};

  sort(cows.begin(),cows.end());
  for(int i =0 ;i < n;i++){
    string cow1;
    string trash;
    string cow2;
    cin >> cow1 >> trash >> trash >> trash >> trash >> cow2;
   restrictions.push_back({cow1,cow2});
  }
  int count = 0;
  while(next_permutation(cows.begin(),cows.end())){
    bool passed = true;
    for(auto p : restrictions){
      string cow1 = p.first;
      string cow2 = p.second;
      auto a = find(cows.begin(),cows.end(),cow1); // Find index of the cows
      auto b = find(cows.begin(),cows.end(),cow2);  
      if(abs(a - b) != 1){
        passed = false;
      }
    }
      if(passed){
        break;
      }
  }

  for(auto cow: cows){
    cout << cow << endl;
  }


  

}


int main(){
    ios_base::sync_with_stdio(0) ; cin.tie(0) ; cout.tie(0);
      solve();
    
}
  
